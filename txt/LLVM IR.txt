@n = dso_local global i32 0

define dso_local i32 @bubblesort(i32* %0) {
%2 = alloca i32*
store i32* %0, i32** %2
%3 = alloca i32
%4 = alloca i32
store i32 0, i32* %3
br label %5
5:
%6 = load i32, i32* %3
%7 = load i32, i32* @n
%8 = sub i32 %7, 1
%9 = icmp slt i32 %6, %8
%10 = zext i1 %9 to i32
%11 = icmp ne i32 %10, 0
br i1 %11, label %12, label %60
12:
store i32 0, i32* %4
br label %13
13:
%14 = load i32, i32* %4
%15 = load i32, i32* @n
%16 = load i32, i32* %3
%17 = sub i32 %15, %16
%18 = sub i32 %17, 1
%19 = icmp slt i32 %14, %18
%20 = zext i1 %19 to i32
%21 = icmp ne i32 %20, 0
br i1 %21, label %22, label %57
22:

%23 = load i32*, i32** %2
%24 = load i32, i32* %4
%25 = getelementptr inbounds i32, i32* %23, i32 %24
%26 = load i32, i32* %25
%27 = load i32*, i32** %2
%28 = load i32, i32* %4
%29 = add i32 %28, 1
%30 = getelementptr inbounds i32, i32* %27, i32 %29
%31 = load i32, i32* %30
%32 = icmp sgt i32 %26, %31
%33 = zext i1 %32 to i32
%34 = icmp ne i32 %33, 0
br i1 %34, label %35, label %54
35:
%36 = alloca i32
%37 = load i32*, i32** %2
%38 = load i32, i32* %4
%39 = add i32 %38, 1
%40 = getelementptr inbounds i32, i32* %37, i32 %39
%41 = load i32, i32* %40
store i32 %41, i32* %36
%42 = load i32*, i32** %2
%43 = load i32, i32* %4
%44 = getelementptr inbounds i32, i32* %42, i32 %43
%45 = load i32, i32* %44
%46 = load i32*, i32** %2
%47 = load i32, i32* %4
%48 = add i32 %47, 1
%49 = getelementptr inbounds i32, i32* %46, i32 %48
store i32 %45, i32* %49
%50 = load i32, i32* %36
%51 = load i32*, i32** %2
%52 = load i32, i32* %4
%53 = getelementptr inbounds i32, i32* %51, i32 %52
store i32 %50, i32* %53
br label %54
54:
%55 = load i32, i32* %4
%56 = add i32 %55, 1
store i32 %56, i32* %4
br label %13
57:
%58 = load i32, i32* %3
%59 = add i32 %58, 1
store i32 %59, i32* %3
br label %5
60:
ret i32 0
ret i32 0
}

define dso_local i32 @insertsort(i32* %0) {
%2 = alloca i32*
store i32* %0, i32** %2
%3 = alloca i32
store i32 1, i32* %3
br label %4
4:
%5 = load i32, i32* %3
%6 = load i32, i32* @n
%7 = icmp slt i32 %5, %6
%8 = zext i1 %7 to i32
%9 = icmp ne i32 %8, 0
br i1 %9, label %10, label %53
10:
%11 = alloca i32
%12 = load i32*, i32** %2
%13 = load i32, i32* %3
%14 = getelementptr inbounds i32, i32* %12, i32 %13
%15 = load i32, i32* %14
store i32 %15, i32* %11
%16 = alloca i32
%17 = load i32, i32* %3
%18 = sub i32 %17, 1
store i32 %18, i32* %16
br label %19
19:
%20 = load i32, i32* %16
%21 = sub i32 0, 1
%22 = icmp sgt i32 %20, %21
%23 = zext i1 %22 to i32
%24 = icmp ne i32 %23, 0
br i1 %24, label %25, label %45
25:
%26 = load i32, i32* %11
%27 = load i32*, i32** %2
%28 = load i32, i32* %16
%29 = getelementptr inbounds i32, i32* %27, i32 %28
%30 = load i32, i32* %29
%31 = icmp slt i32 %26, %30
%32 = zext i1 %31 to i32
%33 = icmp ne i32 %32, 0
br i1 %33, label %34, label %45
34:
%35 = load i32*, i32** %2
%36 = load i32, i32* %16
%37 = getelementptr inbounds i32, i32* %35, i32 %36
%38 = load i32, i32* %37
%39 = load i32*, i32** %2
%40 = load i32, i32* %16
%41 = add i32 %40, 1
%42 = getelementptr inbounds i32, i32* %39, i32 %41
store i32 %38, i32* %42
%43 = load i32, i32* %16
%44 = sub i32 %43, 1
store i32 %44, i32* %16
br label %19
45:
%46 = load i32, i32* %11
%47 = load i32*, i32** %2
%48 = load i32, i32* %16
%49 = add i32 %48, 1
%50 = getelementptr inbounds i32, i32* %47, i32 %49
store i32 %46, i32* %50
%51 = load i32, i32* %3
%52 = add i32 %51, 1
store i32 %52, i32* %3
br label %4
53:
ret i32 0
ret i32 0
}

define dso_local i32 @QuickSort(i32* %0, i32 %1, i32 %2) {
%4 = alloca i32*
store i32* %0, i32** %4
%5 = alloca i32
store i32 %1, i32* %5
%6 = alloca i32
store i32 %2, i32* %6

%7 = load i32, i32* %5
%8 = load i32, i32* %6
%9 = icmp slt i32 %7, %8
%10 = zext i1 %9 to i32
%11 = icmp ne i32 %10, 0
br i1 %11, label %12, label %118
12:
%13 = alloca i32
%14 = load i32, i32* %5
store i32 %14, i32* %13
%15 = alloca i32
%16 = load i32, i32* %6
store i32 %16, i32* %15
%17 = alloca i32
%18 = load i32*, i32** %4
%19 = load i32, i32* %5
%20 = getelementptr inbounds i32, i32* %18, i32 %19
%21 = load i32, i32* %20
store i32 %21, i32* %17
br label %22
22:
%23 = load i32, i32* %13
%24 = load i32, i32* %15
%25 = icmp slt i32 %23, %24
%26 = zext i1 %25 to i32
%27 = icmp ne i32 %26, 0
br i1 %27, label %28, label %100
28:
br label %29
29:
%30 = load i32, i32* %13
%31 = load i32, i32* %15
%32 = icmp slt i32 %30, %31
%33 = zext i1 %32 to i32
%34 = icmp ne i32 %33, 0
br i1 %34, label %35, label %48
35:
%36 = load i32*, i32** %4
%37 = load i32, i32* %15
%38 = getelementptr inbounds i32, i32* %36, i32 %37
%39 = load i32, i32* %38
%40 = load i32, i32* %17
%41 = sub i32 %40, 1
%42 = icmp sgt i32 %39, %41
%43 = zext i1 %42 to i32
%44 = icmp ne i32 %43, 0
br i1 %44, label %45, label %48
45:
%46 = load i32, i32* %15
%47 = sub i32 %46, 1
store i32 %47, i32* %15
br label %29
48:

%49 = load i32, i32* %13
%50 = load i32, i32* %15
%51 = icmp slt i32 %49, %50
%52 = zext i1 %51 to i32
%53 = icmp ne i32 %52, 0
br i1 %53, label %54, label %64
54:
%55 = load i32*, i32** %4
%56 = load i32, i32* %15
%57 = getelementptr inbounds i32, i32* %55, i32 %56
%58 = load i32, i32* %57
%59 = load i32*, i32** %4
%60 = load i32, i32* %13
%61 = getelementptr inbounds i32, i32* %59, i32 %60
store i32 %58, i32* %61
%62 = load i32, i32* %13
%63 = add i32 %62, 1
store i32 %63, i32* %13
br label %64
64:
br label %65
65:
%66 = load i32, i32* %13
%67 = load i32, i32* %15
%68 = icmp slt i32 %66, %67
%69 = zext i1 %68 to i32
%70 = icmp ne i32 %69, 0
br i1 %70, label %71, label %83
71:
%72 = load i32*, i32** %4
%73 = load i32, i32* %13
%74 = getelementptr inbounds i32, i32* %72, i32 %73
%75 = load i32, i32* %74
%76 = load i32, i32* %17
%77 = icmp slt i32 %75, %76
%78 = zext i1 %77 to i32
%79 = icmp ne i32 %78, 0
br i1 %79, label %80, label %83
80:
%81 = load i32, i32* %13
%82 = add i32 %81, 1
store i32 %82, i32* %13
br label %65
83:

%84 = load i32, i32* %13
%85 = load i32, i32* %15
%86 = icmp slt i32 %84, %85
%87 = zext i1 %86 to i32
%88 = icmp ne i32 %87, 0
br i1 %88, label %89, label %99
89:
%90 = load i32*, i32** %4
%91 = load i32, i32* %13
%92 = getelementptr inbounds i32, i32* %90, i32 %91
%93 = load i32, i32* %92
%94 = load i32*, i32** %4
%95 = load i32, i32* %15
%96 = getelementptr inbounds i32, i32* %94, i32 %95
store i32 %93, i32* %96
%97 = load i32, i32* %15
%98 = sub i32 %97, 1
store i32 %98, i32* %15
br label %99
99:
br label %22
100:
%101 = load i32, i32* %17
%102 = load i32*, i32** %4
%103 = load i32, i32* %13
%104 = getelementptr inbounds i32, i32* %102, i32 %103
store i32 %101, i32* %104
%105 = alloca i32
%106 = load i32, i32* %13
%107 = sub i32 %106, 1
store i32 %107, i32* %105
%108 = load i32*, i32** %4
%109 = load i32, i32* %5
%110 = load i32, i32* %105
%111 = call i32 @QuickSort(i32* %108, i32 %109, i32 %110)
store i32 %111, i32* %105
%112 = load i32, i32* %13
%113 = add i32 %112, 1
store i32 %113, i32* %105
%114 = load i32*, i32** %4
%115 = load i32, i32* %105
%116 = load i32, i32* %6
%117 = call i32 @QuickSort(i32* %114, i32 %115, i32 %116)
store i32 %117, i32* %105
br label %118
118:
ret i32 0
ret i32 0
}

define dso_local i32 @getMid(i32* %0) {
%2 = alloca i32*
store i32* %0, i32** %2
%3 = alloca i32

%4 = load i32, i32* @n
%5 = srem i32 %4, 2
%6 = icmp eq i32 %5, 0
%7 = zext i1 %6 to i32
%8 = icmp ne i32 %7, 0
br i1 %8, label %9, label %24
9:
%10 = load i32, i32* @n
%11 = sdiv i32 %10, 2
store i32 %11, i32* %3
%12 = load i32*, i32** %2
%13 = load i32, i32* %3
%14 = getelementptr inbounds i32, i32* %12, i32 %13
%15 = load i32, i32* %14
%16 = load i32*, i32** %2
%17 = load i32, i32* %3
%18 = sub i32 %17, 1
%19 = getelementptr inbounds i32, i32* %16, i32 %18
%20 = load i32, i32* %19
%21 = add i32 %15, %20
%22 = sdiv i32 %21, 2
ret i32 %22
br label %32
24:
%25 = load i32, i32* @n
%26 = sdiv i32 %25, 2
store i32 %26, i32* %3
%27 = load i32*, i32** %2
%28 = load i32, i32* %3
%29 = getelementptr inbounds i32, i32* %27, i32 %28
%30 = load i32, i32* %29
ret i32 %30
br label %32
32:
ret i32 0
}

define dso_local i32 @getMost(i32* %0) {
%2 = alloca i32*
store i32* %0, i32** %2
%3 = alloca [1000 x i32]
%4 = alloca i32
store i32 0, i32* %4
br label %5
5:
%6 = load i32, i32* %4
%7 = icmp slt i32 %6, 1000
%8 = zext i1 %7 to i32
%9 = icmp ne i32 %8, 0
br i1 %9, label %10, label %15
10:
%11 = load i32, i32* %4
%12 = getelementptr inbounds [1000 x i32], [1000 x i32]* %3, i32 0, i32 %11
store i32 0, i32* %12
%13 = load i32, i32* %4
%14 = add i32 %13, 1
store i32 %14, i32* %4
br label %5
15:
store i32 0, i32* %4
%16 = alloca i32
%17 = alloca i32
store i32 0, i32* %16
br label %18
18:
%19 = load i32, i32* %4
%20 = load i32, i32* @n
%21 = icmp slt i32 %19, %20
%22 = zext i1 %21 to i32
%23 = icmp ne i32 %22, 0
br i1 %23, label %24, label %51
24:
%25 = alloca i32
%26 = load i32*, i32** %2
%27 = load i32, i32* %4
%28 = getelementptr inbounds i32, i32* %26, i32 %27
%29 = load i32, i32* %28
store i32 %29, i32* %25
%30 = load i32, i32* %25
%31 = getelementptr inbounds [1000 x i32], [1000 x i32]* %3, i32 0, i32 %30
%32 = load i32, i32* %31
%33 = add i32 %32, 1
%34 = load i32, i32* %25
%35 = getelementptr inbounds [1000 x i32], [1000 x i32]* %3, i32 0, i32 %34
store i32 %33, i32* %35

%36 = load i32, i32* %25
%37 = getelementptr inbounds [1000 x i32], [1000 x i32]* %3, i32 0, i32 %36
%38 = load i32, i32* %37
%39 = load i32, i32* %16
%40 = icmp sgt i32 %38, %39
%41 = zext i1 %40 to i32
%42 = icmp ne i32 %41, 0
br i1 %42, label %43, label %48
43:
%44 = load i32, i32* %25
%45 = getelementptr inbounds [1000 x i32], [1000 x i32]* %3, i32 0, i32 %44
%46 = load i32, i32* %45
store i32 %46, i32* %16
%47 = load i32, i32* %25
store i32 %47, i32* %17
br label %48
48:
%49 = load i32, i32* %4
%50 = add i32 %49, 1
store i32 %50, i32* %4
br label %18
51:
%52 = load i32, i32* %17
ret i32 %52
ret i32 0
}

define dso_local i32 @revert(i32* %0) {
%2 = alloca i32*
store i32* %0, i32** %2
%3 = alloca i32
%4 = alloca i32
%5 = alloca i32
store i32 0, i32* %4
store i32 0, i32* %5
br label %6
6:
%7 = load i32, i32* %4
%8 = load i32, i32* %5
%9 = icmp slt i32 %7, %8
%10 = zext i1 %9 to i32
%11 = icmp ne i32 %10, 0
br i1 %11, label %12, label %32
12:
%13 = load i32*, i32** %2
%14 = load i32, i32* %4
%15 = getelementptr inbounds i32, i32* %13, i32 %14
%16 = load i32, i32* %15
store i32 %16, i32* %3
%17 = load i32*, i32** %2
%18 = load i32, i32* %5
%19 = getelementptr inbounds i32, i32* %17, i32 %18
%20 = load i32, i32* %19
%21 = load i32*, i32** %2
%22 = load i32, i32* %4
%23 = getelementptr inbounds i32, i32* %21, i32 %22
store i32 %20, i32* %23
%24 = load i32, i32* %3
%25 = load i32*, i32** %2
%26 = load i32, i32* %5
%27 = getelementptr inbounds i32, i32* %25, i32 %26
store i32 %24, i32* %27
%28 = load i32, i32* %4
%29 = add i32 %28, 1
store i32 %29, i32* %4
%30 = load i32, i32* %5
%31 = sub i32 %30, 1
store i32 %31, i32* %5
br label %6
32:
ret i32 0
ret i32 0
}

define dso_local i32 @arrCopy(i32* %0, i32* %1) {
%3 = alloca i32*
store i32* %0, i32** %3
%4 = alloca i32*
store i32* %1, i32** %4
%5 = alloca i32
store i32 0, i32* %5
br label %6
6:
%7 = load i32, i32* %5
%8 = load i32, i32* @n
%9 = icmp slt i32 %7, %8
%10 = zext i1 %9 to i32
%11 = icmp ne i32 %10, 0
br i1 %11, label %12, label %22
12:
%13 = load i32*, i32** %3
%14 = load i32, i32* %5
%15 = getelementptr inbounds i32, i32* %13, i32 %14
%16 = load i32, i32* %15
%17 = load i32*, i32** %4
%18 = load i32, i32* %5
%19 = getelementptr inbounds i32, i32* %17, i32 %18
store i32 %16, i32* %19
%20 = load i32, i32* %5
%21 = add i32 %20, 1
store i32 %21, i32* %5
br label %6
22:
ret i32 0
ret i32 0
}

define dso_local i32 @calSum(i32* %0, i32 %1) {
%3 = alloca i32*
store i32* %0, i32** %3
%4 = alloca i32
store i32 %1, i32* %4
%5 = alloca i32
store i32 0, i32* %5
%6 = alloca i32
store i32 0, i32* %6
br label %7
7:
%8 = load i32, i32* %6
%9 = load i32, i32* @n
%10 = icmp slt i32 %8, %9
%11 = zext i1 %10 to i32
%12 = icmp ne i32 %11, 0
br i1 %12, label %13, label %40
13:
%14 = load i32, i32* %5
%15 = load i32*, i32** %3
%16 = load i32, i32* %6
%17 = getelementptr inbounds i32, i32* %15, i32 %16
%18 = load i32, i32* %17
%19 = add i32 %14, %18
store i32 %19, i32* %5

%20 = load i32, i32* %6
%21 = load i32, i32* %4
%22 = srem i32 %20, %21
%23 = load i32, i32* %4
%24 = sub i32 %23, 1
%25 = icmp ne i32 %22, %24
%26 = zext i1 %25 to i32
%27 = icmp ne i32 %26, 0
br i1 %27, label %28, label %32
28:
%29 = load i32*, i32** %3
%30 = load i32, i32* %6
%31 = getelementptr inbounds i32, i32* %29, i32 %30
store i32 0, i32* %31
br label %37
32:
%33 = load i32, i32* %5
%34 = load i32*, i32** %3
%35 = load i32, i32* %6
%36 = getelementptr inbounds i32, i32* %34, i32 %35
store i32 %33, i32* %36
store i32 0, i32* %5
br label %37
37:
%38 = load i32, i32* %6
%39 = add i32 %38, 1
store i32 %39, i32* %6
br label %7
40:
ret i32 0
ret i32 0
}

define dso_local i32 @avgPooling(i32* %0, i32 %1) {
%3 = alloca i32*
store i32* %0, i32** %3
%4 = alloca i32
store i32 %1, i32* %4
%5 = alloca i32
%6 = alloca i32
store i32 0, i32* %6
store i32 0, i32* %5
%7 = alloca i32
br label %8
8:
%9 = load i32, i32* %6
%10 = load i32, i32* @n
%11 = icmp slt i32 %9, %10
%12 = zext i1 %11 to i32
%13 = icmp ne i32 %12, 0
br i1 %13, label %14, label %73
14:

%15 = load i32, i32* %6
%16 = load i32, i32* %4
%17 = sub i32 %16, 1
%18 = icmp slt i32 %15, %17
%19 = zext i1 %18 to i32
%20 = icmp ne i32 %19, 0
br i1 %20, label %21, label %28
21:
%22 = load i32, i32* %5
%23 = load i32*, i32** %3
%24 = load i32, i32* %6
%25 = getelementptr inbounds i32, i32* %23, i32 %24
%26 = load i32, i32* %25
%27 = add i32 %22, %26
store i32 %27, i32* %5
br label %70
28:

%29 = load i32, i32* %6
%30 = load i32, i32* %4
%31 = sub i32 %30, 1
%32 = icmp eq i32 %29, %31
%33 = zext i1 %32 to i32
%34 = icmp ne i32 %33, 0
br i1 %34, label %35, label %44
35:
%36 = load i32*, i32** %3
%37 = getelementptr inbounds i32, i32* %36, i32 0
%38 = load i32, i32* %37
store i32 %38, i32* %7
%39 = load i32, i32* %5
%40 = load i32, i32* %4
%41 = sdiv i32 %39, %40
%42 = load i32*, i32** %3
%43 = getelementptr inbounds i32, i32* %42, i32 0
store i32 %41, i32* %43
br label %69
44:
%45 = load i32, i32* %5
%46 = load i32*, i32** %3
%47 = load i32, i32* %6
%48 = getelementptr inbounds i32, i32* %46, i32 %47
%49 = load i32, i32* %48
%50 = add i32 %45, %49
%51 = load i32, i32* %7
%52 = sub i32 %50, %51
store i32 %52, i32* %5
%53 = load i32*, i32** %3
%54 = load i32, i32* %6
%55 = load i32, i32* %4
%56 = sub i32 %54, %55
%57 = add i32 %56, 1
%58 = getelementptr inbounds i32, i32* %53, i32 %57
%59 = load i32, i32* %58
store i32 %59, i32* %7
%60 = load i32, i32* %5
%61 = load i32, i32* %4
%62 = sdiv i32 %60, %61
%63 = load i32*, i32** %3
%64 = load i32, i32* %6
%65 = load i32, i32* %4
%66 = sub i32 %64, %65
%67 = add i32 %66, 1
%68 = getelementptr inbounds i32, i32* %63, i32 %67
store i32 %62, i32* %68
br label %69
69:
br label %70
70:
%71 = load i32, i32* %6
%72 = add i32 %71, 1
store i32 %72, i32* %6
br label %8
73:
%74 = load i32, i32* @n
%75 = load i32, i32* %4
%76 = sub i32 %74, %75
%77 = add i32 %76, 1
store i32 %77, i32* %6
br label %78
78:
%79 = load i32, i32* %6
%80 = load i32, i32* @n
%81 = icmp slt i32 %79, %80
%82 = zext i1 %81 to i32
%83 = icmp ne i32 %82, 0
br i1 %83, label %84, label %90
84:
%85 = load i32*, i32** %3
%86 = load i32, i32* %6
%87 = getelementptr inbounds i32, i32* %85, i32 %86
store i32 0, i32* %87
%88 = load i32, i32* %6
%89 = add i32 %88, 1
store i32 %89, i32* %6
br label %78
90:
ret i32 0
ret i32 0
}




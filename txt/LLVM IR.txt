@buf = dso_local global [2 x [100 x i32]] zeroinitializer

define dso_local void @merge_sort(i32 %0, i32 %1) {
%3 = alloca i32
store i32 %0, i32* %3
%4 = alloca i32
store i32 %1, i32* %4

%5 = load i32, i32* %3
%6 = add i32 %5, 1
%7 = load i32, i32* %4
%8 = icmp sge i32 %6, %7
%9 = zext i1 %8 to i32
%10 = icmp ne i32 %9, 0
br i1 %10, label %11, label %13
11:
ret void
br label %13
13:
%14 = alloca i32
%15 = load i32, i32* %3
%16 = load i32, i32* %4
%17 = add i32 %15, %16
%18 = sdiv i32 %17, 2
store i32 %18, i32* %14
%19 = load i32, i32* %3
%20 = load i32, i32* %14
call void @merge_sort(i32 %19, i32 %20)
%21 = load i32, i32* %14
%22 = load i32, i32* %4
call void @merge_sort(i32 %21, i32 %22)
%23 = alloca i32
%24 = load i32, i32* %3
store i32 %24, i32* %23
%25 = alloca i32
%26 = load i32, i32* %14
store i32 %26, i32* %25
%27 = alloca i32
%28 = load i32, i32* %3
store i32 %28, i32* %27
br label %29
29:
%30 = load i32, i32* %23
%31 = load i32, i32* %14
%32 = icmp slt i32 %30, %31
%33 = zext i1 %32 to i32
%34 = icmp ne i32 %33, 0
br i1 %34, label %35, label %76
35:
%36 = load i32, i32* %25
%37 = load i32, i32* %4
%38 = icmp slt i32 %36, %37
%39 = zext i1 %38 to i32
%40 = icmp ne i32 %39, 0
br i1 %40, label %41, label %76
41:

%42 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i32 0, i32 0
%43 = load i32, i32* %23
%44 = getelementptr inbounds [100 x i32], [100 x i32]* %42, i32 0, i32 %43
%45 = load i32, i32* %44
%46 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i32 0, i32 0
%47 = load i32, i32* %25
%48 = getelementptr inbounds [100 x i32], [100 x i32]* %46, i32 0, i32 %47
%49 = load i32, i32* %48
%50 = icmp slt i32 %45, %49
%51 = zext i1 %50 to i32
%52 = icmp ne i32 %51, 0
br i1 %52, label %53, label %63
53:
%54 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i32 0, i32 0
%55 = load i32, i32* %23
%56 = getelementptr inbounds [100 x i32], [100 x i32]* %54, i32 0, i32 %55
%57 = load i32, i32* %56
%58 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i32 0, i32 1
%59 = load i32, i32* %27
%60 = getelementptr inbounds [100 x i32], [100 x i32]* %58, i32 0, i32 %59
store i32 %57, i32* %60
%61 = load i32, i32* %23
%62 = add i32 %61, 1
store i32 %62, i32* %23
br label %73
63:
%64 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i32 0, i32 0
%65 = load i32, i32* %25
%66 = getelementptr inbounds [100 x i32], [100 x i32]* %64, i32 0, i32 %65
%67 = load i32, i32* %66
%68 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i32 0, i32 1
%69 = load i32, i32* %27
%70 = getelementptr inbounds [100 x i32], [100 x i32]* %68, i32 0, i32 %69
store i32 %67, i32* %70
%71 = load i32, i32* %25
%72 = add i32 %71, 1
store i32 %72, i32* %25
br label %73
73:
%74 = load i32, i32* %27
%75 = add i32 %74, 1
store i32 %75, i32* %27
br label %29
76:
br label %77
77:
%78 = load i32, i32* %23
%79 = load i32, i32* %14
%80 = icmp slt i32 %78, %79
%81 = zext i1 %80 to i32
%82 = icmp ne i32 %81, 0
br i1 %82, label %83, label %95
83:
%84 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i32 0, i32 0
%85 = load i32, i32* %23
%86 = getelementptr inbounds [100 x i32], [100 x i32]* %84, i32 0, i32 %85
%87 = load i32, i32* %86
%88 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i32 0, i32 1
%89 = load i32, i32* %27
%90 = getelementptr inbounds [100 x i32], [100 x i32]* %88, i32 0, i32 %89
store i32 %87, i32* %90
%91 = load i32, i32* %23
%92 = add i32 %91, 1
store i32 %92, i32* %23
%93 = load i32, i32* %27
%94 = add i32 %93, 1
store i32 %94, i32* %27
br label %77
95:
br label %96
96:
%97 = load i32, i32* %25
%98 = load i32, i32* %4
%99 = icmp slt i32 %97, %98
%100 = zext i1 %99 to i32
%101 = icmp ne i32 %100, 0
br i1 %101, label %102, label %114
102:
%103 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i32 0, i32 0
%104 = load i32, i32* %25
%105 = getelementptr inbounds [100 x i32], [100 x i32]* %103, i32 0, i32 %104
%106 = load i32, i32* %105
%107 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i32 0, i32 1
%108 = load i32, i32* %27
%109 = getelementptr inbounds [100 x i32], [100 x i32]* %107, i32 0, i32 %108
store i32 %106, i32* %109
%110 = load i32, i32* %25
%111 = add i32 %110, 1
store i32 %111, i32* %25
%112 = load i32, i32* %27
%113 = add i32 %112, 1
store i32 %113, i32* %27
br label %96
114:
br label %115
115:
%116 = load i32, i32* %3
%117 = load i32, i32* %4
%118 = icmp slt i32 %116, %117
%119 = zext i1 %118 to i32
%120 = icmp ne i32 %119, 0
br i1 %120, label %121, label %131
121:
%122 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i32 0, i32 1
%123 = load i32, i32* %3
%124 = getelementptr inbounds [100 x i32], [100 x i32]* %122, i32 0, i32 %123
%125 = load i32, i32* %124
%126 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i32 0, i32 0
%127 = load i32, i32* %3
%128 = getelementptr inbounds [100 x i32], [100 x i32]* %126, i32 0, i32 %127
store i32 %125, i32* %128
%129 = load i32, i32* %3
%130 = add i32 %129, 1
store i32 %130, i32* %3
br label %115
131:
ret void
}

define dso_local i32 @main() {
%1 = alloca i32
%2 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i32 0, i32 0
%3 = getelementptr inbounds [100 x i32], [100 x i32]* %2, i32 0, i32 0
%4 = call i32 @getarray(i32* %3)
store i32 %4, i32* %1
%5 = load i32, i32* %1
call void @merge_sort(i32 0, i32 %5)
%6 = load i32, i32* %1
%7 = getelementptr inbounds [2 x [100 x i32]], [2 x [100 x i32]]* @buf, i32 0, i32 0
%8 = getelementptr inbounds [100 x i32], [100 x i32]* %7, i32 0, i32 0
call void @putarray(i32 %6, i32* %8)
call void @putint(i32 0)
ret i32 0
}
declare dso_local i32 @getint()
declare dso_local i32 @getch()
declare dso_local float @getfloat()
declare dso_local i32 @getarray(i32*)
declare dso_local i32 @getfarray(float*)
declare dso_local void @putint(i32)
declare dso_local void @putch(i32)
declare dso_local void @putfloat(float)
declare dso_local void @putarray(i32, i32*)
declare dso_local void @putfarray(i32, float*)

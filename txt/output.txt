CONSTTK const 2
FLOATTK float 2
IDENFR RADIUS 2
ASSIGN = 2
FLOATCON 5.5 2
COMMA , 2
IDENFR PI 2
ASSIGN = 2
FLOATCON 03.141592653589793 2
COMMA , 2
IDENFR EPS 2
ASSIGN = 2
FLOATCON 1e-6 2
SEMICN ; 2
CONSTTK const 5
FLOATTK float 5
IDENFR PI_HEX 5
ASSIGN = 5
FLOATCON 0x1.921fb6p+1 5
COMMA , 5
IDENFR HEX2 5
ASSIGN = 5
FLOATCON 0x.AP-3 5
SEMICN ; 5
CONSTTK const 8
FLOATTK float 8
IDENFR FACT 8
ASSIGN = 8
MINU - 8
FLOATCON .33E+5 8
COMMA , 8
IDENFR EVAL1 8
ASSIGN = 8
IDENFR PI 8
MULT * 8
IDENFR RADIUS 8
MULT * 8
IDENFR RADIUS 8
COMMA , 8
IDENFR EVAL2 8
ASSIGN = 8
INTCON 2 8
MULT * 8
IDENFR PI_HEX 8
MULT * 8
IDENFR RADIUS 8
COMMA , 8
IDENFR EVAL3 8
ASSIGN = 8
IDENFR PI 8
MULT * 8
INTCON 2 8
MULT * 8
IDENFR RADIUS 8
SEMICN ; 8
CONSTTK const 11
FLOATTK float 11
IDENFR CONV1 11
ASSIGN = 11
INTCON 233 11
COMMA , 11
IDENFR CONV2 11
ASSIGN = 11
INTCON 4095 11
SEMICN ; 11
CONSTTK const 12
INTTK int 12
IDENFR MAX 12
ASSIGN = 12
FLOATCON 1e9 12
COMMA , 12
IDENFR TWO 12
ASSIGN = 12
FLOATCON 2.9 12
COMMA , 12
IDENFR THREE 12
ASSIGN = 12
FLOATCON 3.2 12
COMMA , 12
IDENFR FIVE 12
ASSIGN = 12
IDENFR TWO 12
PLUS + 12
IDENFR THREE 12
SEMICN ; 12
FLOATTK float 15
IDENFR float_abs 15
LPARENT ( 15
FLOATTK float 15
IDENFR x 15
RPARENT ) 15
LBRACE { 15
IFTK if 16
LPARENT ( 16
IDENFR x 16
LSS < 16
INTCON 0 16
RPARENT ) 16
RETURNTK return 16
MINU - 16
IDENFR x 16
SEMICN ; 16
RETURNTK return 17
IDENFR x 17
SEMICN ; 17
RBRACE } 18
FLOATTK float 21
IDENFR circle_area 21
LPARENT ( 21
INTTK int 21
IDENFR radius 21
RPARENT ) 21
LBRACE { 21
RETURNTK return 22
LPARENT ( 22
IDENFR PI 22
MULT * 22
IDENFR radius 22
MULT * 22
IDENFR radius 22
PLUS + 22
LPARENT ( 22
IDENFR radius 22
MULT * 22
IDENFR radius 22
RPARENT ) 22
MULT * 22
IDENFR PI 22
RPARENT ) 22
DIV / 22
INTCON 2 22
SEMICN ; 22
RBRACE } 23
INTTK int 26
IDENFR float_eq 26
LPARENT ( 26
FLOATTK float 26
IDENFR a 26
COMMA , 26
FLOATTK float 26
IDENFR b 26
RPARENT ) 26
LBRACE { 26
IFTK if 27
LPARENT ( 27
IDENFR float_abs 27
LPARENT ( 27
IDENFR a 27
MINU - 27
IDENFR b 27
RPARENT ) 27
LSS < 27
IDENFR EPS 27
RPARENT ) 27
LBRACE { 27
RETURNTK return 28
INTCON 1 28
MULT * 28
FLOATCON 2. 28
DIV / 28
INTCON 2 28
SEMICN ; 28
RBRACE } 29
ELSETK else 29
LBRACE { 29
RETURNTK return 30
INTCON 0 30
SEMICN ; 30
RBRACE } 31
RBRACE } 32
VOIDTK void 34
IDENFR error 34
LPARENT ( 34
RPARENT ) 34
LBRACE { 34
IDENFR putch 35
LPARENT ( 35
INTCON 101 35
RPARENT ) 35
SEMICN ; 35
IDENFR putch 36
LPARENT ( 36
INTCON 114 36
RPARENT ) 36
SEMICN ; 36
IDENFR putch 37
LPARENT ( 37
INTCON 114 37
RPARENT ) 37
SEMICN ; 37
IDENFR putch 38
LPARENT ( 38
INTCON 111 38
RPARENT ) 38
SEMICN ; 38
IDENFR putch 39
LPARENT ( 39
INTCON 114 39
RPARENT ) 39
SEMICN ; 39
IDENFR putch 40
LPARENT ( 40
INTCON 10 40
RPARENT ) 40
SEMICN ; 40
RBRACE } 41
VOIDTK void 43
IDENFR ok 43
LPARENT ( 43
RPARENT ) 43
LBRACE { 43
IDENFR putch 44
LPARENT ( 44
INTCON 111 44
RPARENT ) 44
SEMICN ; 44
IDENFR putch 45
LPARENT ( 45
INTCON 107 45
RPARENT ) 45
SEMICN ; 45
IDENFR putch 46
LPARENT ( 46
INTCON 10 46
RPARENT ) 46
SEMICN ; 46
RBRACE } 47
VOIDTK void 49
IDENFR assert 49
LPARENT ( 49
INTTK int 49
IDENFR cond 49
RPARENT ) 49
LBRACE { 49
IFTK if 50
LPARENT ( 50
NOT ! 50
IDENFR cond 50
RPARENT ) 50
LBRACE { 50
IDENFR error 51
LPARENT ( 51
RPARENT ) 51
SEMICN ; 51
RBRACE } 52
ELSETK else 52
LBRACE { 52
IDENFR ok 53
LPARENT ( 53
RPARENT ) 53
SEMICN ; 53
RBRACE } 54
RBRACE } 55
VOIDTK void 57
IDENFR assert_not 57
LPARENT ( 57
INTTK int 57
IDENFR cond 57
RPARENT ) 57
LBRACE { 57
IFTK if 58
LPARENT ( 58
IDENFR cond 58
RPARENT ) 58
LBRACE { 58
IDENFR error 59
LPARENT ( 59
RPARENT ) 59
SEMICN ; 59
RBRACE } 60
ELSETK else 60
LBRACE { 60
IDENFR ok 61
LPARENT ( 61
RPARENT ) 61
SEMICN ; 61
RBRACE } 62
RBRACE } 63
INTTK int 65
MAINTK main 65
LPARENT ( 65
RPARENT ) 65
LBRACE { 65
IDENFR assert_not 66
LPARENT ( 66
IDENFR float_eq 66
LPARENT ( 66
IDENFR HEX2 66
COMMA , 66
IDENFR FACT 66
RPARENT ) 66
RPARENT ) 66
SEMICN ; 66
IDENFR assert_not 67
LPARENT ( 67
IDENFR float_eq 67
LPARENT ( 67
IDENFR EVAL1 67
COMMA , 67
IDENFR EVAL2 67
RPARENT ) 67
RPARENT ) 67
SEMICN ; 67
IDENFR assert 68
LPARENT ( 68
IDENFR float_eq 68
LPARENT ( 68
IDENFR EVAL2 68
COMMA , 68
IDENFR EVAL3 68
RPARENT ) 68
RPARENT ) 68
SEMICN ; 68
IDENFR assert 69
LPARENT ( 69
IDENFR float_eq 69
LPARENT ( 69
IDENFR circle_area 69
LPARENT ( 69
IDENFR RADIUS 69
RPARENT ) 69
COMMA , 69
IDENFR circle_area 70
LPARENT ( 70
IDENFR FIVE 70
RPARENT ) 70
RPARENT ) 70
RPARENT ) 70
SEMICN ; 70
IDENFR assert_not 71
LPARENT ( 71
IDENFR float_eq 71
LPARENT ( 71
IDENFR CONV1 71
COMMA , 71
IDENFR CONV2 71
RPARENT ) 71
RPARENT ) 71
SEMICN ; 71
IFTK if 74
LPARENT ( 74
FLOATCON 1.5 74
RPARENT ) 74
IDENFR ok 74
LPARENT ( 74
RPARENT ) 74
SEMICN ; 74
IFTK if 75
LPARENT ( 75
NOT ! 75
NOT ! 75
FLOATCON 3.3 75
RPARENT ) 75
IDENFR ok 75
LPARENT ( 75
RPARENT ) 75
SEMICN ; 75
IFTK if 76
LPARENT ( 76
FLOATCON .0 76
AND && 76
INTCON 3 76
RPARENT ) 76
IDENFR error 76
LPARENT ( 76
RPARENT ) 76
SEMICN ; 76
IFTK if 77
LPARENT ( 77
INTCON 0 77
OR || 77
FLOATCON 0.3 77
RPARENT ) 77
IDENFR ok 77
LPARENT ( 77
RPARENT ) 77
SEMICN ; 77
INTTK int 80
IDENFR i 80
ASSIGN = 80
INTCON 1 80
COMMA , 80
IDENFR p 80
ASSIGN = 80
INTCON 0 80
SEMICN ; 80
FLOATTK float 81
IDENFR arr 81
LBRACK [ 81
INTCON 10 81
RBRACK ] 81
ASSIGN = 81
LBRACE { 81
FLOATCON 1. 81
COMMA , 81
INTCON 2 81
RBRACE } 81
SEMICN ; 81
INTTK int 82
IDENFR len 82
ASSIGN = 82
IDENFR getfarray 82
LPARENT ( 82
IDENFR arr 82
RPARENT ) 82
SEMICN ; 82
WHILETK while 83
LPARENT ( 83
IDENFR i 83
LSS < 83
IDENFR MAX 83
RPARENT ) 83
LBRACE { 83
FLOATTK float 84
IDENFR input 84
ASSIGN = 84
IDENFR getfloat 84
LPARENT ( 84
RPARENT ) 84
SEMICN ; 84
FLOATTK float 85
IDENFR area 85
ASSIGN = 85
IDENFR PI 85
MULT * 85
IDENFR input 85
MULT * 85
IDENFR input 85
COMMA , 85
IDENFR area_trunc 85
ASSIGN = 85
IDENFR circle_area 85
LPARENT ( 85
IDENFR input 85
RPARENT ) 85
SEMICN ; 85
IDENFR arr 86
LBRACK [ 86
IDENFR p 86
RBRACK ] 86
ASSIGN = 86
IDENFR arr 86
LBRACK [ 86
IDENFR p 86
RBRACK ] 86
PLUS + 86
IDENFR input 86
SEMICN ; 86
IDENFR putfloat 88
LPARENT ( 88
IDENFR area 88
RPARENT ) 88
SEMICN ; 88
IDENFR putch 89
LPARENT ( 89
INTCON 32 89
RPARENT ) 89
SEMICN ; 89
IDENFR putint 90
LPARENT ( 90
IDENFR area_trunc 90
RPARENT ) 90
SEMICN ; 90
IDENFR putch 91
LPARENT ( 91
INTCON 10 91
RPARENT ) 91
SEMICN ; 91
IDENFR i 93
ASSIGN = 93
IDENFR i 93
MULT * 93
MINU - 93
MINU - 93
FLOATCON 1e1 93
SEMICN ; 93
IDENFR p 94
ASSIGN = 94
IDENFR p 94
PLUS + 94
INTCON 1 94
SEMICN ; 94
RBRACE } 95
IDENFR putfarray 96
LPARENT ( 96
IDENFR len 96
COMMA , 96
IDENFR arr 96
RPARENT ) 96
SEMICN ; 96
RETURNTK return 97
INTCON 0 97
SEMICN ; 97
RBRACE } 98

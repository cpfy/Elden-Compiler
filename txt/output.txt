/* -- testcase.s */
.data
.extern getint
.extern getch
.extern getfloat
.extern getarray
.extern getfarray
.extern putint
.extern putch
.extern putfloat
.extern putarray
.extern putfarray

a: .word 0
b: .word 0
.text
.global main
main:
	sub sp, sp, #72
0:
	mov r0, sp
	add r0, r0, #4
	str r0, [sp, #0]
	mov r1, #0
	ldr r2, [sp, #0]
	str r1, [r2]
	mov r3, sp
	add r3, r3, #12
	str r3, [sp, #8]
	mov r4, #0
	ldr r5, [sp, #8]
	str r4, [r5]
	b null
3:
	ldr r7, [sp, #0]
	ldr r6, [r7]
	ldr r8, [sp, #16]
	str r6, [r8]
	ldr r11, [sp, #16]
	ldr r10, [r11]
	mov r12, #100
	cmp r10, r12
	movlt r9, #1
	movge r9, #0
	ldr r0, [sp, #20]
	str r9, [r0]
	ldr r3, [sp, #20]
	ldr r1, [r3]
	mov r2, r1
	ldr r5, [sp, #24]
	str r2, [r5]
	ldr r8, [sp, #24]
	ldr r7, [r8]
	mov r6, #0
	cmp r7, r6
	movne r4, #1
	moveq r4, #0
	ldr r11, [sp, #28]
	str r4, [r11]
	ldr r12, [sp, #28]
	ldr r10, [r12]
	mov r0, #1
	cmp r10, r0
	beq 8
	bne 21
8:
	ldr r3, [sp, #0]
	ldr r9, [r3]
	ldr r1, [sp, #32]
	str r9, [r1]
	ldr r8, [sp, #32]
	ldr r2, [r8]
	mov r7, #50
	cmp r2, r7
	moveq r5, #1
	movne r5, #0
	ldr r6, [sp, #36]
	str r5, [r6]
	ldr r12, [sp, #36]
	ldr r4, [r12]
	mov r11, r4
	ldr r10, [sp, #40]
	str r11, [r10]
	ldr r1, [sp, #40]
	ldr r3, [r1]
	mov r9, #0
	cmp r3, r9
	movne r0, #1
	moveq r0, #0
	ldr r8, [sp, #44]
	str r0, [r8]
	ldr r7, [sp, #44]
	ldr r2, [r7]
	mov r6, #1
	cmp r2, r6
	beq 13
	bne 15
13:
	b null
14:
	b null
15:
	ldr r12, [sp, #8]
	ldr r5, [r12]
	ldr r4, [sp, #48]
	str r5, [r4]
	ldr r11, [sp, #0]
	ldr r10, [r11]
	ldr r1, [sp, #52]
	str r10, [r1]
	ldr r9, [sp, #48]
	ldr r3, [r9]
	ldr r0, [sp, #52]
	ldr r8, [r0]
	add r7, r3, r8
	ldr r2, [sp, #56]
	str r7, [r2]
	ldr r12, [sp, #56]
	ldr r6, [r12]
	ldr r4, [sp, #8]
	str r6, [r4]
	ldr r11, [sp, #0]
	ldr r5, [r11]
	ldr r1, [sp, #60]
	str r5, [r1]
	ldr r9, [sp, #60]
	ldr r10, [r9]
	mov r0, #1
	add r2, r10, r0
	ldr r3, [sp, #64]
	str r2, [r3]
	ldr r7, [sp, #64]
	ldr r8, [r7]
	ldr r12, [sp, #0]
	str r8, [r12]
	b null
21:
	ldr r6, [sp, #8]
	ldr r4, [r6]
	ldr r11, [sp, #68]
	str r4, [r11]
	ldr r5, [sp, #68]
	ldr r1, [r5]
	mov r0, r1
	add sp, sp, #72
	bx lr
23:
	mov r0, #0
	add sp, sp, #72
	bx lr

addr_of_a: .word a
addr_of_b: .word b

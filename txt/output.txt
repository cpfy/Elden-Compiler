INTTK int 1
IDENFR b 1
ASSIGN = 1
INTCON 5 1
SEMICN ; 1
INTTK int 2
IDENFR c 2
LBRACK [ 2
INTCON 4 2
RBRACK ] 2
ASSIGN = 2
LBRACE { 2
INTCON 6 2
COMMA , 2
INTCON 7 2
COMMA , 2
INTCON 8 2
COMMA , 2
INTCON 9 2
RBRACE } 2
SEMICN ; 2
INTTK int 4
MAINTK main 4
LPARENT ( 4
RPARENT ) 4
LBRACE { 5
INTTK int 6
IDENFR a 6
SEMICN ; 6
IDENFR a 7
ASSIGN = 7
INTCON 1 7
SEMICN ; 7
LBRACE { 8
INTTK int 9
IDENFR a 9
SEMICN ; 9
IDENFR a 10
ASSIGN = 10
INTCON 2 10
SEMICN ; 10
LBRACE { 11
IDENFR a 12
ASSIGN = 12
INTCON 3 12
SEMICN ; 12
IDENFR putint 13
LPARENT ( 13
IDENFR a 13
RPARENT ) 13
SEMICN ; 13
RBRACE } 14
IDENFR putint 15
LPARENT ( 15
IDENFR a 15
RPARENT ) 15
SEMICN ; 15
RBRACE } 16
IDENFR putint 17
LPARENT ( 17
IDENFR a 17
RPARENT ) 17
SEMICN ; 17
IDENFR putch 17
LPARENT ( 17
INTCON 10 17
RPARENT ) 17
SEMICN ; 17
WHILETK while 19
LPARENT ( 19
IDENFR a 19
LSS < 19
INTCON 5 19
RPARENT ) 19
LBRACE { 19
INTTK int 20
IDENFR a 20
ASSIGN = 20
INTCON 0 20
SEMICN ; 20
IDENFR a 21
ASSIGN = 21
IDENFR a 21
PLUS + 21
INTCON 1 21
SEMICN ; 21
IFTK if 22
LPARENT ( 22
IDENFR a 22
RPARENT ) 22
BREAKTK break 23
SEMICN ; 23
RBRACE } 24
IDENFR putint 25
LPARENT ( 25
IDENFR a 25
RPARENT ) 25
SEMICN ; 25
IDENFR putch 25
LPARENT ( 25
INTCON 10 25
RPARENT ) 25
SEMICN ; 25
LBRACE { 27
LBRACE { 28
LBRACE { 29
LBRACE { 30
RBRACE } 30
RBRACE } 31
IDENFR c 32
LBRACK [ 32
INTCON 2 32
RBRACK ] 32
ASSIGN = 32
INTCON 1 32
SEMICN ; 32
LBRACE { 33
INTTK int 34
IDENFR c 34
LBRACK [ 34
INTCON 2 34
RBRACK ] 34
LBRACK [ 34
INTCON 8 34
RBRACK ] 34
ASSIGN = 34
LBRACE { 34
LBRACE { 34
INTCON 0 34
COMMA , 34
INTCON 9 34
RBRACE } 34
COMMA , 34
INTCON 8 34
COMMA , 34
INTCON 3 34
RBRACE } 34
SEMICN ; 34
RBRACE } 35
RBRACE } 36
RBRACE } 37
LBRACE { 39
INTTK int 40
IDENFR b 40
ASSIGN = 40
INTCON 2 40
SEMICN ; 40
IFTK if 41
LPARENT ( 41
IDENFR c 41
LBRACK [ 41
INTCON 2 41
RBRACK ] 41
RPARENT ) 41
LBRACE { 41
INTTK int 42
IDENFR c 42
LBRACK [ 42
INTCON 7 42
RBRACK ] 42
LBRACK [ 42
INTCON 1 42
RBRACK ] 42
LBRACK [ 42
INTCON 5 42
RBRACK ] 42
ASSIGN = 42
LBRACE { 42
LBRACE { 42
RBRACE } 42
COMMA , 42
LBRACE { 42
RBRACE } 42
COMMA , 42
LBRACE { 42
INTCON 2 42
COMMA , 42
INTCON 1 42
COMMA , 42
INTCON 8 42
RBRACE } 42
COMMA , 42
LBRACE { 42
LBRACE { 42
RBRACE } 42
RBRACE } 42
RBRACE } 42
SEMICN ; 42
IDENFR putint 43
LPARENT ( 43
IDENFR c 43
LBRACK [ 43
IDENFR b 43
RBRACK ] 43
LBRACK [ 43
INTCON 0 43
RBRACK ] 43
LBRACK [ 43
INTCON 0 43
RBRACK ] 43
RPARENT ) 43
SEMICN ; 43
IDENFR putint 44
LPARENT ( 44
IDENFR c 44
LBRACK [ 44
IDENFR b 44
RBRACK ] 44
LBRACK [ 44
INTCON 0 44
RBRACK ] 44
LBRACK [ 44
INTCON 1 44
RBRACK ] 44
RPARENT ) 44
SEMICN ; 44
IDENFR putint 45
LPARENT ( 45
IDENFR c 45
LBRACK [ 45
IDENFR b 45
RBRACK ] 45
LBRACK [ 45
INTCON 0 45
RBRACK ] 45
LBRACK [ 45
INTCON 2 45
RBRACK ] 45
RPARENT ) 45
SEMICN ; 45
RBRACE } 46
RBRACE } 47
IDENFR putch 48
LPARENT ( 48
INTCON 10 48
RPARENT ) 48
SEMICN ; 48
IDENFR putint 50
LPARENT ( 50
IDENFR b 50
RPARENT ) 50
SEMICN ; 50
IDENFR putch 50
LPARENT ( 50
INTCON 10 50
RPARENT ) 50
SEMICN ; 50
IDENFR putint 51
LPARENT ( 51
IDENFR c 51
LBRACK [ 51
INTCON 0 51
RBRACK ] 51
RPARENT ) 51
SEMICN ; 51
IDENFR putint 51
LPARENT ( 51
IDENFR c 51
LBRACK [ 51
INTCON 1 51
RBRACK ] 51
RPARENT ) 51
SEMICN ; 51
IDENFR putint 51
LPARENT ( 51
IDENFR c 51
LBRACK [ 51
INTCON 2 51
RBRACK ] 51
RPARENT ) 51
SEMICN ; 51
IDENFR putint 51
LPARENT ( 51
IDENFR c 51
LBRACK [ 51
INTCON 3 51
RBRACK ] 51
RPARENT ) 51
SEMICN ; 51
IDENFR putch 51
LPARENT ( 51
INTCON 10 51
RPARENT ) 51
SEMICN ; 51
RETURNTK return 52
INTCON 0 52
SEMICN ; 52
RBRACE } 53

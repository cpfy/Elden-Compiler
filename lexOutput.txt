INTTK int 1
IDENFR n 1
SEMICN ; 1
INTTK int 2
IDENFR bubblesort 2
LPARENT ( 2
INTTK int 2
IDENFR arr 2
LBRACK [ 2
RBRACK ] 2
RPARENT ) 2
LBRACE { 3
INTTK int 4
IDENFR i 4
SEMICN ; 4
INTTK int 5
IDENFR j 5
SEMICN ; 5
IDENFR i 6
ASSIGN = 6
INTCON 0 6
SEMICN ; 6
WHILETK while 7
LPARENT ( 7
IDENFR i 7
LSS < 7
IDENFR n 7
MINU - 7
INTCON 1 7
RPARENT ) 7
LBRACE { 7
IDENFR j 9
ASSIGN = 9
INTCON 0 9
SEMICN ; 9
WHILETK while 10
LPARENT ( 10
IDENFR j 10
LSS < 10
IDENFR n 10
MINU - 10
IDENFR i 10
MINU - 10
INTCON 1 10
RPARENT ) 10
LBRACE { 10
IFTK if 11
LPARENT ( 11
IDENFR arr 11
LBRACK [ 11
IDENFR j 11
RBRACK ] 11
GRE > 11
IDENFR arr 11
LBRACK [ 11
IDENFR j 11
PLUS + 11
INTCON 1 11
RBRACK ] 11
RPARENT ) 11
LBRACE { 11
INTTK int 13
IDENFR tmp 13
SEMICN ; 13
IDENFR tmp 14
ASSIGN = 14
IDENFR arr 14
LBRACK [ 14
IDENFR j 14
PLUS + 14
INTCON 1 14
RBRACK ] 14
SEMICN ; 14
IDENFR arr 15
LBRACK [ 15
IDENFR j 15
PLUS + 15
INTCON 1 15
RBRACK ] 15
ASSIGN = 15
IDENFR arr 15
LBRACK [ 15
IDENFR j 15
RBRACK ] 15
SEMICN ; 15
IDENFR arr 16
LBRACK [ 16
IDENFR j 16
RBRACK ] 16
ASSIGN = 16
IDENFR tmp 16
SEMICN ; 16
RBRACE } 17
IDENFR j 18
ASSIGN = 18
IDENFR j 18
PLUS + 18
INTCON 1 18
SEMICN ; 18
RBRACE } 19
IDENFR i 20
ASSIGN = 20
IDENFR i 20
PLUS + 20
INTCON 1 20
SEMICN ; 20
RBRACE } 21
RETURNTK return 22
INTCON 0 22
SEMICN ; 22
RBRACE } 23
INTTK int 25
IDENFR main 25
LPARENT ( 25
RPARENT ) 25
LBRACE { 25
IDENFR n 26
ASSIGN = 26
INTCON 10 26
SEMICN ; 26
INTTK int 27
IDENFR a 27
LBRACK [ 27
INTCON 10 27
RBRACK ] 27
SEMICN ; 27
IDENFR a 28
LBRACK [ 28
INTCON 0 28
RBRACK ] 28
ASSIGN = 28
INTCON 4 28
SEMICN ; 28
IDENFR a 28
LBRACK [ 28
INTCON 1 28
RBRACK ] 28
ASSIGN = 28
INTCON 3 28
SEMICN ; 28
IDENFR a 28
LBRACK [ 28
INTCON 2 28
RBRACK ] 28
ASSIGN = 28
INTCON 9 28
SEMICN ; 28
IDENFR a 28
LBRACK [ 28
INTCON 3 28
RBRACK ] 28
ASSIGN = 28
INTCON 2 28
SEMICN ; 28
IDENFR a 28
LBRACK [ 28
INTCON 4 28
RBRACK ] 28
ASSIGN = 28
INTCON 0 28
SEMICN ; 28
IDENFR a 29
LBRACK [ 29
INTCON 5 29
RBRACK ] 29
ASSIGN = 29
INTCON 1 29
SEMICN ; 29
IDENFR a 29
LBRACK [ 29
INTCON 6 29
RBRACK ] 29
ASSIGN = 29
INTCON 6 29
SEMICN ; 29
IDENFR a 29
LBRACK [ 29
INTCON 7 29
RBRACK ] 29
ASSIGN = 29
INTCON 5 29
SEMICN ; 29
IDENFR a 29
LBRACK [ 29
INTCON 8 29
RBRACK ] 29
ASSIGN = 29
INTCON 7 29
SEMICN ; 29
IDENFR a 29
LBRACK [ 29
INTCON 9 29
RBRACK ] 29
ASSIGN = 29
INTCON 8 29
SEMICN ; 29
INTTK int 30
IDENFR i 30
SEMICN ; 30
IDENFR i 31
ASSIGN = 31
IDENFR bubblesort 31
LPARENT ( 31
IDENFR a 31
RPARENT ) 31
SEMICN ; 31
WHILETK while 32
LPARENT ( 32
IDENFR i 32
LSS < 32
IDENFR n 32
RPARENT ) 32
LBRACE { 32
INTTK int 33
IDENFR tmp 33
SEMICN ; 33
IDENFR tmp 34
ASSIGN = 34
IDENFR a 34
LBRACK [ 34
IDENFR i 34
RBRACK ] 34
SEMICN ; 34
IDENFR putint 35
LPARENT ( 35
IDENFR tmp 35
RPARENT ) 35
SEMICN ; 35
IDENFR tmp 36
ASSIGN = 36
INTCON 10 36
SEMICN ; 36
IDENFR putch 37
LPARENT ( 37
IDENFR tmp 37
RPARENT ) 37
SEMICN ; 37
IDENFR i 38
ASSIGN = 38
IDENFR i 38
PLUS + 38
INTCON 1 38
SEMICN ; 38
RBRACE } 39
RETURNTK return 40
INTCON 0 40
SEMICN ; 40
RBRACE } 41

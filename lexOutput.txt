INTTK int 1
IDENFR get_one 1
LPARENT ( 1
INTTK int 1
IDENFR a 1
RPARENT ) 1
LBRACE { 1
RETURNTK return 2
INTCON 1 2
SEMICN ; 2
RBRACE } 3
INTTK int 5
IDENFR deepWhileBr 5
LPARENT ( 5
INTTK int 5
IDENFR a 5
COMMA , 5
INTTK int 5
IDENFR b 5
RPARENT ) 5
LBRACE { 5
INTTK int 6
IDENFR c 6
SEMICN ; 6
IDENFR c 7
ASSIGN = 7
IDENFR a 7
PLUS + 7
IDENFR b 7
SEMICN ; 7
WHILETK while 8
LPARENT ( 8
IDENFR c 8
LSS < 8
INTCON 75 8
RPARENT ) 8
LBRACE { 8
INTTK int 9
IDENFR d 9
SEMICN ; 9
IDENFR d 10
ASSIGN = 10
INTCON 42 10
SEMICN ; 10
IFTK if 11
LPARENT ( 11
IDENFR c 11
LSS < 11
INTCON 100 11
RPARENT ) 11
LBRACE { 11
IDENFR c 12
ASSIGN = 12
IDENFR c 12
PLUS + 12
IDENFR d 12
SEMICN ; 12
IFTK if 13
LPARENT ( 13
IDENFR c 13
GRE > 13
INTCON 99 13
RPARENT ) 13
LBRACE { 13
INTTK int 14
IDENFR e 14
SEMICN ; 14
IDENFR e 15
ASSIGN = 15
IDENFR d 15
MULT * 15
INTCON 2 15
SEMICN ; 15
IFTK if 16
LPARENT ( 16
IDENFR get_one 16
LPARENT ( 16
INTCON 0 16
RPARENT ) 16
EQL == 16
INTCON 1 16
RPARENT ) 16
LBRACE { 16
IDENFR c 17
ASSIGN = 17
IDENFR e 17
MULT * 17
INTCON 2 17
SEMICN ; 17
RBRACE } 18
RBRACE } 19
RBRACE } 20
RBRACE } 21
RETURNTK return 22
LPARENT ( 22
IDENFR c 22
RPARENT ) 22
SEMICN ; 22
RBRACE } 23
INTTK int 25
IDENFR main 25
LPARENT ( 25
RPARENT ) 25
LBRACE { 25
INTTK int 26
IDENFR p 26
SEMICN ; 26
IDENFR p 27
ASSIGN = 27
INTCON 2 27
SEMICN ; 27
IDENFR p 28
ASSIGN = 28
IDENFR deepWhileBr 28
LPARENT ( 28
IDENFR p 28
COMMA , 28
IDENFR p 28
RPARENT ) 28
SEMICN ; 28
IDENFR putint 29
LPARENT ( 29
IDENFR p 29
RPARENT ) 29
SEMICN ; 29
RETURNTK return 30
INTCON 0 30
SEMICN ; 30
RBRACE } 31

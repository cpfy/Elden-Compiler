INTTK int 1
IDENFR arr1 1
LBRACK [ 1
INTCON 10 1
RBRACK ] 1
LBRACK [ 1
INTCON 2 1
RBRACK ] 1
LBRACK [ 1
INTCON 3 1
RBRACK ] 1
LBRACK [ 1
INTCON 4 1
RBRACK ] 1
LBRACK [ 1
INTCON 5 1
RBRACK ] 1
LBRACK [ 1
INTCON 6 1
RBRACK ] 1
LBRACK [ 1
INTCON 2 1
RBRACK ] 1
SEMICN ; 1
INTTK int 2
IDENFR arr2 2
LBRACK [ 2
INTCON 10 2
RBRACK ] 2
LBRACK [ 2
INTCON 2 2
RBRACK ] 2
LBRACK [ 2
INTCON 3 2
RBRACK ] 2
LBRACK [ 2
INTCON 2 2
RBRACK ] 2
LBRACK [ 2
INTCON 4 2
RBRACK ] 2
LBRACK [ 2
INTCON 8 2
RBRACK ] 2
LBRACK [ 2
INTCON 7 2
RBRACK ] 2
SEMICN ; 2
VOIDTK void 4
IDENFR loop1 4
LPARENT ( 4
INTTK int 4
IDENFR x 4
COMMA , 4
INTTK int 4
IDENFR y 4
RPARENT ) 4
LBRACE { 4
INTTK int 5
IDENFR a 5
COMMA , 5
IDENFR b 5
COMMA , 5
IDENFR c 5
COMMA , 5
IDENFR d 5
COMMA , 5
IDENFR e 5
COMMA , 5
IDENFR f 5
COMMA , 5
IDENFR g 5
SEMICN ; 5
IDENFR a 6
ASSIGN = 6
INTCON 0 6
SEMICN ; 6
WHILETK while 7
LPARENT ( 7
IDENFR a 7
LSS < 7
IDENFR x 7
AND && 7
IDENFR a 7
LSS < 7
IDENFR y 7
RPARENT ) 7
LBRACE { 7
IDENFR b 8
ASSIGN = 8
INTCON 0 8
SEMICN ; 8
WHILETK while 9
LPARENT ( 9
IDENFR b 9
LSS < 9
INTCON 2 9
RPARENT ) 9
LBRACE { 9
IDENFR c 10
ASSIGN = 10
INTCON 0 10
SEMICN ; 10
WHILETK while 11
LPARENT ( 11
IDENFR c 11
LSS < 11
INTCON 3 11
RPARENT ) 11
LBRACE { 11
IDENFR d 12
ASSIGN = 12
INTCON 0 12
SEMICN ; 12
WHILETK while 13
LPARENT ( 13
IDENFR d 13
LSS < 13
INTCON 4 13
RPARENT ) 13
LBRACE { 13
IDENFR e 14
ASSIGN = 14
INTCON 0 14
SEMICN ; 14
WHILETK while 15
LPARENT ( 15
IDENFR e 15
LSS < 15
INTCON 5 15
RPARENT ) 15
LBRACE { 15
IDENFR f 16
ASSIGN = 16
INTCON 0 16
SEMICN ; 16
WHILETK while 17
LPARENT ( 17
IDENFR f 17
LSS < 17
INTCON 6 17
RPARENT ) 17
LBRACE { 17
IDENFR g 18
ASSIGN = 18
INTCON 0 18
SEMICN ; 18
WHILETK while 19
LPARENT ( 19
IDENFR g 19
LSS < 19
INTCON 2 19
RPARENT ) 19
LBRACE { 19
IDENFR arr1 20
LBRACK [ 20
IDENFR a 20
RBRACK ] 20
LBRACK [ 20
IDENFR b 20
RBRACK ] 20
LBRACK [ 20
IDENFR c 20
RBRACK ] 20
LBRACK [ 20
IDENFR d 20
RBRACK ] 20
LBRACK [ 20
IDENFR e 20
RBRACK ] 20
LBRACK [ 20
IDENFR f 20
RBRACK ] 20
LBRACK [ 20
IDENFR g 20
RBRACK ] 20
ASSIGN = 20
IDENFR a 20
PLUS + 20
IDENFR b 20
PLUS + 20
IDENFR c 20
PLUS + 20
IDENFR d 20
PLUS + 20
IDENFR e 20
PLUS + 20
IDENFR f 20
PLUS + 20
IDENFR g 20
PLUS + 20
IDENFR x 20
PLUS + 20
IDENFR y 20
SEMICN ; 20
IDENFR g 21
ASSIGN = 21
IDENFR g 21
PLUS + 21
INTCON 1 21
SEMICN ; 21
RBRACE } 22
IDENFR f 23
ASSIGN = 23
IDENFR f 23
PLUS + 23
INTCON 1 23
SEMICN ; 23
RBRACE } 24
IDENFR e 25
ASSIGN = 25
IDENFR e 25
PLUS + 25
INTCON 1 25
SEMICN ; 25
RBRACE } 26
IDENFR d 27
ASSIGN = 27
IDENFR d 27
PLUS + 27
INTCON 1 27
SEMICN ; 27
RBRACE } 28
IDENFR c 29
ASSIGN = 29
IDENFR c 29
PLUS + 29
INTCON 1 29
SEMICN ; 29
RBRACE } 30
IDENFR b 31
ASSIGN = 31
IDENFR b 31
PLUS + 31
INTCON 1 31
SEMICN ; 31
RBRACE } 32
IDENFR a 33
ASSIGN = 33
IDENFR a 33
PLUS + 33
INTCON 1 33
SEMICN ; 33
RBRACE } 34
RBRACE } 35
VOIDTK void 37
IDENFR loop2 37
LPARENT ( 37
RPARENT ) 37
LBRACE { 37
INTTK int 38
IDENFR a 38
COMMA , 38
IDENFR b 38
COMMA , 38
IDENFR c 38
COMMA , 38
IDENFR d 38
COMMA , 38
IDENFR e 38
COMMA , 38
IDENFR f 38
COMMA , 38
IDENFR g 38
SEMICN ; 38
IDENFR a 39
ASSIGN = 39
INTCON 0 39
SEMICN ; 39
WHILETK while 40
LPARENT ( 40
IDENFR a 40
LSS < 40
INTCON 10 40
RPARENT ) 40
LBRACE { 40
IDENFR b 41
ASSIGN = 41
INTCON 0 41
SEMICN ; 41
WHILETK while 42
LPARENT ( 42
IDENFR b 42
LSS < 42
INTCON 2 42
RPARENT ) 42
LBRACE { 42
IDENFR c 43
ASSIGN = 43
INTCON 0 43
SEMICN ; 43
WHILETK while 44
LPARENT ( 44
IDENFR c 44
LSS < 44
INTCON 3 44
RPARENT ) 44
LBRACE { 44
IDENFR d 45
ASSIGN = 45
INTCON 0 45
SEMICN ; 45
WHILETK while 46
LPARENT ( 46
IDENFR d 46
LSS < 46
INTCON 2 46
RPARENT ) 46
LBRACE { 46
IDENFR e 47
ASSIGN = 47
INTCON 0 47
SEMICN ; 47
WHILETK while 48
LPARENT ( 48
IDENFR e 48
LSS < 48
INTCON 4 48
RPARENT ) 48
LBRACE { 48
IDENFR f 49
ASSIGN = 49
INTCON 0 49
SEMICN ; 49
WHILETK while 50
LPARENT ( 50
IDENFR f 50
LSS < 50
INTCON 8 50
RPARENT ) 50
LBRACE { 50
IDENFR g 51
ASSIGN = 51
INTCON 0 51
SEMICN ; 51
WHILETK while 52
LPARENT ( 52
IDENFR g 52
LSS < 52
INTCON 7 52
RPARENT ) 52
LBRACE { 52
IDENFR arr2 53
LBRACK [ 53
IDENFR a 53
RBRACK ] 53
LBRACK [ 53
IDENFR b 53
RBRACK ] 53
LBRACK [ 53
IDENFR c 53
RBRACK ] 53
LBRACK [ 53
IDENFR d 53
RBRACK ] 53
LBRACK [ 53
IDENFR e 53
RBRACK ] 53
LBRACK [ 53
IDENFR f 53
RBRACK ] 53
LBRACK [ 53
IDENFR g 53
RBRACK ] 53
ASSIGN = 53
IDENFR a 53
PLUS + 53
IDENFR b 53
PLUS + 53
IDENFR d 53
PLUS + 53
IDENFR g 53
SEMICN ; 53
IDENFR g 54
ASSIGN = 54
IDENFR g 54
PLUS + 54
INTCON 1 54
SEMICN ; 54
RBRACE } 55
IDENFR f 56
ASSIGN = 56
IDENFR f 56
PLUS + 56
INTCON 1 56
SEMICN ; 56
RBRACE } 57
IDENFR e 58
ASSIGN = 58
IDENFR e 58
PLUS + 58
INTCON 1 58
SEMICN ; 58
RBRACE } 59
IDENFR d 60
ASSIGN = 60
IDENFR d 60
PLUS + 60
INTCON 1 60
SEMICN ; 60
RBRACE } 61
IDENFR c 62
ASSIGN = 62
IDENFR c 62
PLUS + 62
INTCON 1 62
SEMICN ; 62
RBRACE } 63
IDENFR b 64
ASSIGN = 64
IDENFR b 64
PLUS + 64
INTCON 1 64
SEMICN ; 64
RBRACE } 65
IDENFR a 66
ASSIGN = 66
IDENFR a 66
PLUS + 66
INTCON 1 66
SEMICN ; 66
RBRACE } 67
RBRACE } 68
INTTK int 70
IDENFR loop3 70
LPARENT ( 70
INTTK int 70
IDENFR h 70
COMMA , 70
INTTK int 70
IDENFR i 70
COMMA , 70
INTTK int 70
IDENFR j 70
COMMA , 70
INTTK int 70
IDENFR k 70
COMMA , 70
INTTK int 70
IDENFR l 70
COMMA , 70
INTTK int 70
IDENFR m 70
COMMA , 70
INTTK int 70
IDENFR n 70
RPARENT ) 70
LBRACE { 70
INTTK int 71
IDENFR a 71
COMMA , 71
IDENFR b 71
COMMA , 71
IDENFR c 71
COMMA , 71
IDENFR d 71
COMMA , 71
IDENFR e 71
COMMA , 71
IDENFR f 71
COMMA , 71
IDENFR g 71
SEMICN ; 71
INTTK int 72
IDENFR ans 72
ASSIGN = 72
INTCON 0 72
SEMICN ; 72
IDENFR a 73
ASSIGN = 73
INTCON 0 73
SEMICN ; 73
WHILETK while 74
LPARENT ( 74
IDENFR a 74
LSS < 74
INTCON 10 74
RPARENT ) 74
LBRACE { 74
IDENFR b 75
ASSIGN = 75
INTCON 0 75
SEMICN ; 75
WHILETK while 76
LPARENT ( 76
IDENFR b 76
LSS < 76
INTCON 100 76
RPARENT ) 76
LBRACE { 76
IDENFR c 77
ASSIGN = 77
INTCON 0 77
SEMICN ; 77
WHILETK while 78
LPARENT ( 78
IDENFR c 78
LSS < 78
INTCON 1000 78
RPARENT ) 78
LBRACE { 78
IDENFR d 79
ASSIGN = 79
INTCON 0 79
SEMICN ; 79
WHILETK while 80
LPARENT ( 80
IDENFR d 80
LSS < 80
INTCON 10000 80
RPARENT ) 80
LBRACE { 80
IDENFR e 81
ASSIGN = 81
INTCON 0 81
SEMICN ; 81
WHILETK while 82
LPARENT ( 82
IDENFR e 82
LSS < 82
INTCON 100000 82
RPARENT ) 82
LBRACE { 82
IDENFR f 83
ASSIGN = 83
INTCON 0 83
SEMICN ; 83
WHILETK while 84
LPARENT ( 84
IDENFR f 84
LSS < 84
INTCON 1000000 84
RPARENT ) 84
LBRACE { 84
IDENFR g 85
ASSIGN = 85
INTCON 0 85
SEMICN ; 85
WHILETK while 86
LPARENT ( 86
IDENFR g 86
LSS < 86
INTCON 10000000 86
RPARENT ) 86
LBRACE { 86
IDENFR ans 87
ASSIGN = 87
IDENFR ans 87
MOD % 87
INTCON 817 87
PLUS + 87
IDENFR arr1 87
LBRACK [ 87
IDENFR a 87
RBRACK ] 87
LBRACK [ 87
IDENFR b 87
RBRACK ] 87
LBRACK [ 87
IDENFR c 87
RBRACK ] 87
LBRACK [ 87
IDENFR d 87
RBRACK ] 87
LBRACK [ 87
IDENFR e 87
RBRACK ] 87
LBRACK [ 87
IDENFR f 87
RBRACK ] 87
LBRACK [ 87
IDENFR g 87
RBRACK ] 87
PLUS + 87
IDENFR arr2 87
LBRACK [ 87
IDENFR a 87
RBRACK ] 87
LBRACK [ 87
IDENFR b 87
RBRACK ] 87
LBRACK [ 87
IDENFR c 87
RBRACK ] 87
LBRACK [ 87
IDENFR d 87
RBRACK ] 87
LBRACK [ 87
IDENFR e 87
RBRACK ] 87
LBRACK [ 87
IDENFR f 87
RBRACK ] 87
LBRACK [ 87
IDENFR g 87
RBRACK ] 87
SEMICN ; 87
IDENFR g 88
ASSIGN = 88
IDENFR g 88
PLUS + 88
INTCON 1 88
SEMICN ; 88
IFTK if 89
LPARENT ( 89
IDENFR g 89
GEQ >= 89
IDENFR n 89
RPARENT ) 89
BREAKTK break 89
SEMICN ; 89
RBRACE } 90
IDENFR f 91
ASSIGN = 91
IDENFR f 91
PLUS + 91
INTCON 1 91
SEMICN ; 91
IFTK if 92
LPARENT ( 92
IDENFR f 92
GEQ >= 92
IDENFR m 92
RPARENT ) 92
BREAKTK break 92
SEMICN ; 92
RBRACE } 93
IDENFR e 94
ASSIGN = 94
IDENFR e 94
PLUS + 94
INTCON 1 94
SEMICN ; 94
IFTK if 95
LPARENT ( 95
IDENFR e 95
GEQ >= 95
IDENFR l 95
RPARENT ) 95
BREAKTK break 95
SEMICN ; 95
RBRACE } 96
IDENFR d 97
ASSIGN = 97
IDENFR d 97
PLUS + 97
INTCON 1 97
SEMICN ; 97
IFTK if 98
LPARENT ( 98
IDENFR d 98
GEQ >= 98
IDENFR k 98
RPARENT ) 98
BREAKTK break 98
SEMICN ; 98
RBRACE } 99
IDENFR c 100
ASSIGN = 100
IDENFR c 100
PLUS + 100
INTCON 1 100
SEMICN ; 100
IFTK if 101
LPARENT ( 101
IDENFR c 101
GEQ >= 101
IDENFR j 101
RPARENT ) 101
BREAKTK break 101
SEMICN ; 101
RBRACE } 102
IDENFR b 103
ASSIGN = 103
IDENFR b 103
PLUS + 103
INTCON 1 103
SEMICN ; 103
IFTK if 104
LPARENT ( 104
IDENFR b 104
GEQ >= 104
IDENFR i 104
RPARENT ) 104
BREAKTK break 104
SEMICN ; 104
RBRACE } 105
IDENFR a 106
ASSIGN = 106
IDENFR a 106
PLUS + 106
INTCON 1 106
SEMICN ; 106
IFTK if 107
LPARENT ( 107
IDENFR a 107
GEQ >= 107
IDENFR h 107
RPARENT ) 107
BREAKTK break 107
SEMICN ; 107
RBRACE } 108
RETURNTK return 109
IDENFR ans 109
SEMICN ; 109
RBRACE } 110
INTTK int 112
IDENFR main 112
LPARENT ( 112
RPARENT ) 112
LBRACE { 112
INTTK int 113
IDENFR x 113
ASSIGN = 113
IDENFR getint 113
LPARENT ( 113
RPARENT ) 113
SEMICN ; 113
INTTK int 114
IDENFR y 114
ASSIGN = 114
IDENFR getint 114
LPARENT ( 114
RPARENT ) 114
SEMICN ; 114
INTTK int 115
IDENFR h 115
ASSIGN = 115
IDENFR getint 115
LPARENT ( 115
RPARENT ) 115
SEMICN ; 115
INTTK int 116
IDENFR i 116
ASSIGN = 116
IDENFR getint 116
LPARENT ( 116
RPARENT ) 116
COMMA , 116
IDENFR j 116
ASSIGN = 116
IDENFR getint 116
LPARENT ( 116
RPARENT ) 116
SEMICN ; 116
INTTK int 117
IDENFR k 117
ASSIGN = 117
IDENFR getint 117
LPARENT ( 117
RPARENT ) 117
SEMICN ; 117
INTTK int 118
IDENFR l 118
ASSIGN = 118
IDENFR getint 118
LPARENT ( 118
RPARENT ) 118
SEMICN ; 118
INTTK int 119
IDENFR m 119
ASSIGN = 119
IDENFR getint 119
LPARENT ( 119
RPARENT ) 119
SEMICN ; 119
INTTK int 120
IDENFR n 120
ASSIGN = 120
IDENFR getint 120
LPARENT ( 120
RPARENT ) 120
SEMICN ; 120
IDENFR loop1 121
LPARENT ( 121
IDENFR x 121
COMMA , 121
IDENFR y 121
RPARENT ) 121
SEMICN ; 121
IDENFR loop2 122
LPARENT ( 122
RPARENT ) 122
SEMICN ; 122
RETURNTK return 123
IDENFR loop3 123
LPARENT ( 123
IDENFR h 123
COMMA , 123
IDENFR i 123
COMMA , 123
IDENFR j 123
COMMA , 123
IDENFR k 123
COMMA , 123
IDENFR l 123
COMMA , 123
IDENFR m 123
COMMA , 123
IDENFR n 123
RPARENT ) 123
SEMICN ; 123
RBRACE } 124
